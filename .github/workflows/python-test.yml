name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      GOOGLE_TTS_API_KEY: ${{ secrets.GOOGLE_TTS_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
      XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
      
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false  

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.4.0
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --with dev
    
    - name: Create test environment file
      run: |
        cat << EOF > .env
        API_ENV=test
        API_DEBUG=true
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
        GOOGLE_TTS_API_KEY: ${{ secrets.GOOGLE_TTS_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
        REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
        XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
        EOF
        
    - name: Run tests
      run: |
        poetry run pytest -v